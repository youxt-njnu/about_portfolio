$yellow-color: #f9f002;
$border-color: #8ae66e;
$blue-color: #00e6f6;
$header-height: 70px;
$aside-width: 400px;
$glitched-duration: 0.9s;
$clip-height: 18px;

.dg .c input {
  height: 27px;
  box-sizing: border-box;
  margin: 0 !important;
}

.earth-digital {
  // overflow: hidden; // 这样子就没有了右侧拖动条，多出来的直接消失了
  // user-select: none; // 禁止选中文字
  filter: saturate(0.85); // 饱和度 但不能继承
}

.hud {
  position: fixed;
  z-index: 2;

  &.header {
    height: $header-height;
    color: black; // 里面的文字颜色
    background: $yellow-color; // header 的背景颜色
    clip-path: polygon(0 0,
      100% 0,
      100% calc(100% - #{$clip-height}),
      73% calc(100% - #{$clip-height}),
      71% 100%,
      0 100%,
      0 0); // 使用calc的时候，里面操作符前后要有空格

    display: flex;
    justify-content: space-between;
    max-width: inherit;

    animation: slideInDown .75s 0.25s;
    animation-fill-mode: both;
    .left {
      width: 27.5%;
      max-width: $aside-width;
      height: 100%;
    }

    .middle {
      width: 45%;
      height: 100%;
    }

    .right {
      // width: 27.5%;
      max-width: $aside-width;
      // height: 100%;
      // text-align: right;
      // padding-right: 16px;
    }

    .date {
      text-align: left;
      padding: 8px 16px;
      position: relative;

      animation-name: h1Glitched;
      animation-duration: calc($glitched-duration * 1.4);
      animation-iteration-count: infinite;
      animation-timing-function: linear;
      &::before {
        content: '';
        display: block;
        position: absolute;
        bottom: 2px;
        left: -20px;
        width: 100%;
        height: 8px;
        background-color: #000;
        clip-path: polygon(0px 0px,
            85px 0px,
            90px 5px,
            100% 5px,
            100% 6px,
            85px 6px,
            80px 10px,
            0px 10px);
      }

      &::after {
        content: '_';
        color: #000;
        font-size: 22px;
        font-weight: 600;
        animation-name: hxAfter;
        animation-duration: $glitched-duration;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
      }

      .text {
        font-size: 18px;
        font-weight: 600;
        color: #000;
        padding-right: 8px;
      }
    }
  }

  &.aside {
    height: calc(100vh - #{$header-height});
    width: $aside-width;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    overflow: hidden;
    padding: 0 16px 16px;

    &.left {
      left: 0;
      animation: slideInLeft 0.25s;
      animation-fill-mode: both;
    }

    &.right {
      right: 0;
      animation: slideInRight 0.25s;
      animation-fill-mode: both;
    }

    .box {
      width: 100%;
      height: 31%;
      padding: 4px;
      box-sizing: border-box;
      position: relative;
      font-size: 1.2rem;
      color: $yellow-color;
      border: solid $yellow-color;
      border-width: 30px 5px 24px 5px; // border的宽度分别为上右下左
      background-color: #000;
      clip-path: polygon(0px 25px,
          26px 0px,
          calc(60% - 25px) 0px,
          60% 25px,
          100% 25px,
          100% calc(100% - 10px),
          calc(100% - 15px) calc(100% - 10px),
          calc(80% - 10px) calc(100% - 10px),
          calc(80% - 15px) 100%,
          80px calc(100% - 0px),
          65px calc(100% - 15px),
          0% calc(100% - 15px));

      transition: all .25s linear;
      &::before {
        content: 'p-14';
        display: block;
        position: absolute;
        bottom: -12px;
        right: 25px;
        padding: 2px 2px 0 2px;
        font-size: 0.6rem;
        line-height: 0.6rem;
        border-left: 2px solid $border-color;
        background-color: #000;
        color: $yellow-color;
      }

      &.inverse {
        border: none;
        padding: 40px 15px 30px;
        color: #000;
        background-color: $yellow-color;
        border-right: 2px solid $border-color;

        // clip-path: polygon(0px 25px, 26px 0px, calc(60% - 25px) 0px, 60% 25px, 100% 25px, 100% 25px, 100% calc(100% - 10px), calc(100% - 15px) calc(100% - 10px), calc(80% - 10px) calc(100% - 10px), calc(80% - 15px) 100%, 80px calc(100% - 0px), 65px calc(100% - 15px), 0% calc(100% - 15px));
        &::before {
          content: 'T-71';
          right: 90px;
          bottom: 9px;
          // background-color: #000; // 会继承上面的&::before
          // color: $yellow-color;
        }
      }

      &.dotted {
        background-color: $yellow-color;
        background-image: radial-gradient(#5d070721 1px, transparent 0);
        background-size: 5px 5px;
      }

      &.box_0 {
        display: flex;
        justify-content: space-between;

        .cover {
          width: 45%;
          height: 100%;
          background: url('./images/role_0.png') no-repeat center;
          background-size: auto 100%;
        }

        .info {
          width: 55%;
          height: 100%;
          padding-left: 16px;
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          align-items: center;

          .text {
            font-size: 14px;
            text-align: justify; // 两端对齐
            text-align-last: left; // 最后一行左侧对其
            word-break: break-all; // 换行的时候打断单词
            line-height: 1.5;
            overflow: hidden auto;
            // text-overflow: ellipsis;
            white-space: pre-wrap;
            height: calc(100% - 50px);
          }
        }
      }

      .chart {
        width: 100%;
        height: 100%;
      }
    }
  }
}

.logo-pic {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: $header-height;
  z-index: 25;

  &::after {
    display: inline-block;
    content: '';
    width: 90%;
    height: 180%;
    background: url('./images/logo.png') no-repeat center;
    background-size: auto 100%;
    filter: drop-shadow(0 1px 5px rgba(0, 100, 200, 0.5));
  }
}

.startBtn,
.startBtn::after {
  cursor: pointer;
  width: 120px;
  height: 40px;
  font-size: 1.2rem;
  background: linear-gradient(45deg, transparent 5%, #FF013C 5%);
  border: 0;
  color: #fff;
  letter-spacing: 0.2em;
  box-shadow: 6px 0 0 $blue-color;
  outline: transparent;
  position: relative;
}

.startBtn {
  &::after {
    --slice-0: inset(50% 50% 50% 50%);
    --slice-1: inset(80% -6px 0 0);
    --slice-2: inset(50% -6px 30% 0);
    --slice-3: inset(10% -6px 85% 0);
    --slice-4: inset(40% -6px 43% 0);
    --slice-5: inset(80% -6px 5% 0);
    content: 'START';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 3%, #00e6f6 3%, #0036f6 5%, #ff013c 5%);
    text-shadow: -3px -3px 0px $yellow-color, 3px 3px 0px $blue-color;
    clip-path: var(--slice-0);
  }

  &:hover::after {
    animation: 1s glitch;
    animation-timing-function: steps(2, end);
  }
}

.tips-modal {
  background: url("./images/square.png") no-repeat center;
  background-size: 100% 100%;

  transform: translate(-50%, -50%);
  transition: all .25s ease-in-out;

  .tips {
    position: absolute;
    height: 85%;
    width: 85%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 0.5rem;
    background: rgba(0,20,50, 0.2);
    backdrop-filter: blur(4px);
    padding: 1rem;
    color: $yellow-color;
    text-align: center;
    font-style: 1rem;
    line-height: 2;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .close {
    position: absolute;
    display: inline-block;
    color: red;
    font-size: 1rem;
    font-weight: 600;
    right: -0.6rem;
    top: -0.6rem;
    cursor: pointer;
    text-shadow: 0 1 0 $blue-color;

    &:hover {
      opacity: 0.8;
    }
  }
}

.hud.footer {
  height: 5rem;
  width: 41rem;
  bottom: 1rem;
  left: 50%;
  padding: 1rem 1rem;
  border-radius: 1rem;
  transform: translateX(-50%);
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  background-color: rgba(0,20,50, 0.2);
  backdrop-filter: blur(4px);

  .square {
    height: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    .text {
      display: inline-block;
      padding: 0 1rem;
      .title {
        font-size: 1.2rem;
        color: $yellow-color;
      }
      .desc {
        font-size: 1.1rem;
        color: #fff;
      }
    }

    .radar {
      background: radial-gradient(rgba(32,255,77, 0.3) 0%, rgba(32, 255, 77, 0) 75%), repeating-radial-gradient(rgba(32,255,77, 0) 5.8%, rgba(32, 255, 77, 0) 18%, #20ff4d 18.6%, rgba(32, 255, 77, 0) 18.9%), linear-gradient(90deg, rgba(32,255,77,0) 49.5%, #20ff4d 50%, #20ff4d 50%, rgba(32,255,77,0) 50.2%), linear-gradient(0deg, rgba(32, 255, 77, 0) 49.5%, #20ff4d 50%, #20ff4d 50%, rgba(32, 255, 77, 0) 50.2%);
      width: 3.5rem;
      height: 3.5em;
      max-height: 3.5rem;
      max-width: 3.5rem;
      position: relative;
      border-radius: 50%;
      border: 0.1rem solid #20ff4d;
      overflow: hidden;
      opacity: 0.8;

      &::before {
        content: " ";
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        animation: blips 5s infinite;
        animation-timing-function: linear;
        animation-delay: 1.4s;
      }
      &::after {
        content: '';
        display: block;
        background-image: linear-gradient(44deg, rgba(0,255,51, 0) 50%, #00ff33 100%);
        width: 50%;
        height: 50%;
        position: absolute;
        top: 0;
        left: 0;
        animation: radar-beam 5s infinite;
        animation-timing-function: linear;
        transform-origin: bottom right;
        border-radius: 100% 0 0 0;
      }
    }
  }
}

.background {
  position: fixed;
  top: -50%;
  left: -50%;
  right: -50%;
  bottom: -50%;
  width: 200%;
  height: 200vh;
  background: rgba(0,0,0,0.1) url('./images/noise.png') repeat 0 0;
  background-repeat: repeat;
  animation: bg-animation 0.2s infinite;
  visibility: visible;
}
@keyframes slideInDown {
  from {
    // transform: translate3d(0, -100%, 0);
    transform: translate(0, -100%);
  }
  to {
    // transform: translate3d(0, 0, 0);
    transform: translate(0, 0);
  }
}

@keyframes slideInLeft {
  from {
    transform: translate(-100%, 0);
  }
  to {
    transform: translate(0, 0);
  }
}

@keyframes slideInRight {
  from {
    transform: translate(100%, 0);
  }
  to {
    transform: translate(0, 0);
  }
}

@keyframes h1Glitched {
  0% {
    transform: skew(-20deg);
    left: -4px;
  }
  10% {
    transform: skew(-20deg);
    left: -4px;
  }
  11% {
    transform: skew(0deg);
    left: 2px;
  }
  50% {
    transform: skew(0deg);

  }
  51% {
    transform: skew(10deg);
  }
  59% {
    transform: skew(10deg);
  }
  60% {
    transform: skew(0deg);
  }
  100% {
    transform: skew(0deg);
  }
}

@keyframes hxAfter {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  51% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}

@keyframes glitch {
  0% {
    clip-path: var(--slice-1);
    transform: translate(-20px -10px);
  }
  10% {
    clip-path: var(--slice-3);
    transform: translate(10px 10px);
  }
  20% {
    clip-path: var(--slice-1);
    transform: translate(-10px 10px);
  }
  30% {
    clip-path: var(--slice-3);
    transform: translate(0px, 5px);
  }
  40% {
    clip-path: var(--slice-2);
    transform: translate(-5px, 0px);
  }
  50% {
    clip-path: var(--slice-4);
    transform: translate(5px, 0px);
  }
  60% {
    clip-path: var(--slice-4);
    transform: translate(5px, 10px);
  }
  70% {
    clip-path: var(--slice-2);
    transform: translate(-10px, 10px);
  }
  80% {
    clip-path: var(--slice-5);
    transform: translate(20px, -10px);
  }
  90% {
    clip-path: var(--slice-1);
    transform: translate(-10px, 0px);
  }
  100% {
    clip-path: var(--slice-1);
    transform: translate(0);
  }
}

@keyframes blips {
  14% {
    background: radial-gradient(2vmin circle at 75% 70%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%);
  }
  14.002% {
    background: radial-gradient(2vmin circle at 75% 70%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 63% 72%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%);
  }
  25% {
    background: radial-gradient(2vmin circle at 75% 70%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 63% 72%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 56% 86%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%);
  }
  26% {
    background: radial-gradient(2vmin circle at 75% 70%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 63% 72%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 56% 86%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 56% 86%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%);
  }
  26% {
    background: radial-gradient(2vmin circle at 75% 70%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 63% 72%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 56% 86%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%);
    opacity: 1;
  }
  100% {
    background: radial-gradient(2vmin circle at 75% 70%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 63% 72%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%), radial-gradient(2vmin circle at 56% 86%, white 10%, $border-color 30%, rgba(255, 255, 255, 0) 100%);
    opacity: 0;
  }
}

@keyframes radar-beam {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes bg-animation {
  0% { transform: translate(0,0);}
  10% { transform: translate(-5%, -5%);}
  20% { transform: translate(-10%, 5%);}
  30% { transform: translate(5%, -10%);}
  40% { transform: translate(-5%, 15%);}
  50% { transform: translate(-10%, 5%);}
  60% { transform: translate(15%, 0);}
  70% { transform: translate(0, 10%);}
  80% { transform: translate(-15%, 0);}
  90% { transform: translate(10%, 5%);}
  100% { transform: translate(5%,0);}
}

